{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/React-website/website/src/components/Rates.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar myHeaders = new Headers();\nmyHeaders.append(\"apikey\", \"sWi8jGLUyeX98IYg63YLju9VIBzdOs4N\");\nvar requestOptions = {\n  method: 'GET',\n  redirect: 'follow',\n  headers: myHeaders\n};\nfetch(\"https://api.apilayer.com/exchangerates_data/latest?symbols=&base=\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\nconsole.log(requestOptions);\nexport default function Rates() {\n  _s();\n  const [eur, setEur] = useState(0);\n  const [gbp, setGbp] = useState(0);\n  const [usd, setUsd] = useState(0);\n  const [rate, setRate] = useState(0);\n  const [rate2, setRate2] = useState(0);\n  async function convert(e) {\n    e.preventDefault();\n    try {\n      const address = URL + API_KEY;\n      const response = await fetch(address);\n      if (response.ok) {\n        const json = await response.json();\n        console.log(json.rates.GBP);\n        console.log(json.rates.USD);\n        setRate(json.rates.GBP);\n        setGbp(eur * json.rates.GBP);\n        setRate2(json.rates.USD);\n        setUsd(eur * json.rates.USD);\n      } else {\n        alert(\"Error retrieving exchange rate.\");\n        console.log(response);\n      }\n    } catch (err) {\n      alert(err);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: myHeaders.base\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n_s(Rates, \"++/MSvY9rw9ZBQNq4HKRzYFrptU=\");\n_c = Rates;\nvar _c;\n$RefreshReg$(_c, \"Rates\");","map":{"version":3,"names":["React","myHeaders","Headers","append","requestOptions","method","redirect","headers","fetch","then","response","text","result","console","log","catch","error","Rates","eur","setEur","useState","gbp","setGbp","usd","setUsd","rate","setRate","rate2","setRate2","convert","e","preventDefault","address","URL","API_KEY","ok","json","rates","GBP","USD","alert","err","base"],"sources":["/Users/apple/Desktop/React-website/website/src/components/Rates.js"],"sourcesContent":["import React from \"react\";\n\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"apikey\", \"sWi8jGLUyeX98IYg63YLju9VIBzdOs4N\");\n\nvar requestOptions = {\n  method: 'GET',\n  redirect: 'follow',\n  headers: myHeaders\n};\n\nfetch(\"https://api.apilayer.com/exchangerates_data/latest?symbols=&base=\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n\n  console.log(requestOptions);\n\nexport default function Rates() {\n    const [eur,setEur] = useState(0);\n  const [gbp,setGbp] = useState(0);\n  const [usd,setUsd] = useState(0);\n  const [rate,setRate] = useState(0);\n  const [rate2,setRate2] = useState(0);\n\n  async function convert(e) {\n    e.preventDefault();\n    try {\n      const address = URL + API_KEY;\n      const response = await fetch(address);\n\n      if (response.ok) {\n        const json = await response.json();\n        console.log(json.rates.GBP);\n        console.log(json.rates.USD);\n        setRate(json.rates.GBP);\n        setGbp(eur * json.rates.GBP);\n        setRate2(json.rates.USD);\n        setUsd(eur * json.rates.USD);\n      } else {\n        alert(\"Error retrieving exchange rate.\");\n        console.log(response);\n      }\n    } catch (err) {\n      alert(err);\n    }\n    return (\n        <>\n        <div>{myHeaders.base}</div>\n        </>\n    )\n    \n}}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAG1B,IAAIC,SAAS,GAAG,IAAIC,OAAO,EAAE;AAC7BD,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,kCAAkC,CAAC;AAE9D,IAAIC,cAAc,GAAG;EACnBC,MAAM,EAAE,KAAK;EACbC,QAAQ,EAAE,QAAQ;EAClBC,OAAO,EAAEN;AACX,CAAC;AAEDO,KAAK,CAAC,mEAAmE,EAAEJ,cAAc,CAAC,CACvFK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;AAE5CH,OAAO,CAACC,GAAG,CAACV,cAAc,CAAC;AAE7B,eAAe,SAASa,KAAK,GAAG;EAAA;EAC5B,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGF,QAAQ,CAAC,CAAC,CAAC;EAChC,MAAM,CAACG,GAAG,EAACC,MAAM,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAChC,MAAM,CAACK,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEpC,eAAeS,OAAO,CAACC,CAAC,EAAE;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACF,MAAMC,OAAO,GAAGC,GAAG,GAAGC,OAAO;MAC7B,MAAMxB,QAAQ,GAAG,MAAMF,KAAK,CAACwB,OAAO,CAAC;MAErC,IAAItB,QAAQ,CAACyB,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAM1B,QAAQ,CAAC0B,IAAI,EAAE;QAClCvB,OAAO,CAACC,GAAG,CAACsB,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC;QAC3BzB,OAAO,CAACC,GAAG,CAACsB,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC;QAC3Bb,OAAO,CAACU,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC;QACvBhB,MAAM,CAACJ,GAAG,GAAGkB,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC;QAC5BV,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC;QACxBf,MAAM,CAACN,GAAG,GAAGkB,IAAI,CAACC,KAAK,CAACE,GAAG,CAAC;MAC9B,CAAC,MAAM;QACLC,KAAK,CAAC,iCAAiC,CAAC;QACxC3B,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACvB;IACF,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACZD,KAAK,CAACC,GAAG,CAAC;IACZ;IACA,oBACI;MAAA,uBACA;QAAA,UAAMxC,SAAS,CAACyC;MAAI;QAAA;QAAA;QAAA;MAAA;IAAO,iBACxB;EAGX;AAAC;AAAC,GAlCsBzB,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}